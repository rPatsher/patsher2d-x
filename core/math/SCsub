#!/usr/bin/env python

Import("env")

env_math = env.Clone()

env_math.add_source_files(env.core_sources, "*.cpp")


import math  # Import the math module for mathematical functions/constants

def generate_math_gen_h():
    # Template content for the math.gen.h file
    math_template = """\
    // math.gen.h

    #ifndef MATH_GEN_H
    #define MATH_GEN_H

    /* Mathematical Constants */
    #define PI %.5f
    #define EULER %.5f

    /* Mathematical Functions */
    #define SQUARE(x) ((x)*(x))
    #define SQRT(x) sqrt(x)
    #define EXP(x) exp(x)
    #define LOG(x) log(x)
    #define SIN(x) sin(x)
    #define COS(x) cos(x)
    #define TAN(x) tan(x)
    #define ABS(x) fabs(x)
    #define CALL(func, val) func(val)
    #define CLAMP(val, min_val, max_val) fmax(min_val, fmin(val, max_val))
    #define CEIL(x) ceil(x)
    #define FLOOR(x) floor(x)
    #define POW(x, y) pow(x, y)
    #define RAD_TO_DEG(x) ((x) * 180.0 / PI)
    #define DEG_TO_RAD(x) ((x) * PI / 180.0)
    #define MIN(x, y) fmin(x, y)
    #define MAX(x, y) fmax(x, y)

    #endif // MATH_GEN_H
    """ % (math.pi, math.e)

    # Write the content to the math.gen.h file
    with open('math.gen.h', 'w') as file:
        file.write(math_template)

# Generate math.gen.h file
generate_math_gen_h()
